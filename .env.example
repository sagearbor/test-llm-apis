# Azure OpenAI Configuration
# Find these values in Azure Portal > Your OpenAI Resource > Keys and Endpoint
AZURE_OPENAI_ENDPOINT=https://your-resource-name.openai.azure.com
AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here

# API Version - use 2024-02-01 or newer for latest models
# For Codex models, you may need 2024-08-01-preview or later
AZURE_OPENAI_API_VERSION=2024-02-01

# ========================================
# Environment Configuration
# ========================================

# Environment - Controls banner display and security behavior across all Node.js and Python apps
# Options: development, staging, production
# The banner middleware checks in this order: APP_ENV → ENVBANNER_ENV → NODE_ENV (fallback)
APP_ENV=development

# Model Deployment Names
# These must match your Azure deployment names exactly (case-sensitive)
# Find these in Azure Portal > Your OpenAI Resource > Deployments

# Coding LLM - For code generation (e.g., gpt-5-codex)
# NOTE: Codex models use the "Responses API" and are auto-detected if the deployment name contains "codex"
CODING_LLM_DEPLOYMENT_NAME=gpt-5-codex

# Smallest LLM - For lightweight tasks (e.g., gpt-4o-mini)
SMALLEST_LLM_DEPLOYMENT_NAME=gpt-4o-mini

# All-Around LLM - For general purpose tasks (e.g., gpt-4o)
ALLAROUND_LLM_DEPLOYMENT_NAME=gpt-4o

# Best LLM - For complex reasoning (e.g., o1-preview, o3-mini)
BEST_LLM_DEPLOYMENT_NAME=o1-preview

# PORT - Server port (optional, defaults to 3000)
# PORT=3000

# ========================================
# OAuth / Authentication (Optional)
# ========================================

# Enable OAuth authentication (set to 'true' to require Azure AD login)
ENABLE_OAUTH=false

# Azure AD Configuration (required if ENABLE_OAUTH=true)
# Find these in Azure Portal > Entra ID > App registrations > Your app

# Application (client) ID
AZURE_AD_CLIENT_ID=your-client-id-here

# Directory (tenant) ID (or use 'common' for multi-tenant)
AZURE_AD_TENANT_ID=your-tenant-id-here

# Client secret (create in Certificates & secrets)
AZURE_AD_CLIENT_SECRET=your-client-secret-here

# Session secret for cookie encryption (REQUIRED in production!)
# Generate with: openssl rand -base64 32
SESSION_SECRET=change-this-to-a-random-string-in-production

# ========================================
# Security Configuration (IMPORTANT!)
# ========================================

# Node Environment - For Node.js optimization and security policies
# NOTE: Use APP_ENV above to control banner display across all environments
# NODE_ENV is primarily for framework optimization, not feature control
NODE_ENV=development

# CORS - Comma-separated list of allowed origins (REQUIRED for production)
# Example: https://app1.azurewebsites.net,https://app2.com
ALLOWED_ORIGINS=

# Your Azure Web App URL (if deploying to Azure)
AZURE_WEBAPP_URL=

# Force authentication for all endpoints (recommended for production)
REQUIRE_AUTH=false

# Rate limiting (optional - defaults shown)
RATE_LIMIT_MAX=10
RATE_LIMIT_WINDOW_MS=60000

# ========================================
# File Upload Configuration (Optional)
# ========================================

# Maximum file size in MB (default: 10MB)
MAX_FILE_SIZE_MB=10

# Maximum files per user at once (default: 5)
MAX_FILES_PER_USER=5

# File retention period in hours (default: 1 hour)
# Files are automatically deleted after this period
FILE_RETENTION_HOURS=1

# Upload rate limit per hour per user (default: 10)
UPLOAD_RATE_LIMIT_PER_HOUR=10

# ========================================
# LLM Response Configuration
# ========================================

# Maximum completion tokens per response (default: 12800, which is 10% of 128K context)
# Formula: (MAX_COMPLETION_TOKENS / CONTEXT_WINDOW) = % used per response
# Example with 12,800 tokens:
#   - 10% of 128K context per response
#   - Allows ~5 full chat turns (10% input + 10% output each)
# Adjust based on your needs:
#   - Higher values = longer, more detailed responses but fewer chat turns
#   - Lower values = shorter responses but more chat history fits in context
MAX_COMPLETION_TOKENS=12800

# ========================================
# Usage Tracking Configuration (when OAuth enabled)
# ========================================

# Directory for usage data (default: ./data)
# For Docker, mount this as a volume: -v /host/data:/app/data
DATA_DIR=./data

# Admin email addresses (comma-separated) who can view all users' usage
# Example: admin1@company.com,admin2@company.com
ADMIN_EMAILS=

# Admin email domains (comma-separated) - all users from these domains are admins
# Example: company.com,admin.company.com
ADMIN_DOMAINS=

# Default rate limits (can be customized per user in rate-limits.json)
# These limits apply when OAuth is enabled
DEFAULT_HOURLY_TOKENS=100000      # 100K tokens per hour
DEFAULT_DAILY_TOKENS=1000000       # 1M tokens per day
DEFAULT_HOURLY_COST=10              # $10 per hour
DEFAULT_DAILY_COST=100              # $100 per day

# ========================================
# Setup Instructions for Azure AD OAuth:
# ========================================
# 1. Go to Azure Portal > Entra ID > App registrations > New registration
# 2. Name: "LLM Test App" (or your preferred name)
# 3. Supported account types: Choose based on your needs
# 4. Redirect URI:
#    - Type: Web
#    - URL: https://your-app.azurewebsites.net/auth/redirect
#    (or http://localhost:3000/auth/redirect for local testing)
# 5. After registration, copy:
#    - Application (client) ID → AZURE_AD_CLIENT_ID
#    - Directory (tenant) ID → AZURE_AD_TENANT_ID
# 6. Create client secret:
#    - Go to "Certificates & secrets" > "New client secret"
#    - Copy the VALUE (not ID) → AZURE_AD_CLIENT_SECRET
# 7. Set ENABLE_OAUTH=true
# 8. Restart the server

